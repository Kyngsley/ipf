
    <!--
        Copyright 2008 the original author or authors. Licensed under the Apache
        License, Version 2.0 (the "License"); you may not use this file except
        in compliance with the License. You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable
        law or agreed to in writing, software distributed under the License is
        distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
        KIND, either express or implied. See the License for the specific
        language governing permissions and limitations under the License.
    -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:cxf="http://camel.apache.org/schema/cxf"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/lang 
http://www.springframework.org/schema/lang/spring-lang-2.5.xsd
http://www.springframework.org/schema/util                                         
http://www.springframework.org/schema/util/spring-util-2.5.xsd                     
http://camel.apache.org/schema/cxf 
http://camel.apache.org/schema/cxf/camel-cxf.xsd
http://camel.apache.org/schema/spring 
http://camel.apache.org/schema/spring/camel-spring.xsd 
">

	<import resource="classpath:META-INF/cxf/cxf.xml" />                       

    <camel:camelContext id="camelContext" streamCache="false">
        <camel:jmxAgent id="agent" disabled="true" />        
        <camel:routeBuilder ref="routeBuilder"/>        
    </camel:camelContext>

    <bean id="routeBuilder" depends-on="routeModelExtender"
        class="org.openehealth.tutorial.SampleRouteBuilder">
    </bean>

    <bean id="jetty" class="org.openehealth.ipf.platform.camel.lbs.http.LbsJettyHttpComponent" />

    <bean id="coreModelExtension" class="org.openehealth.ipf.platform.camel.core.extend.CoreModelExtension" />

    <bean id="lbsModelExtension" class="org.openehealth.ipf.platform.camel.lbs.core.extend.LbsModelExtension" />

	<bean id="routeModelExtender" class="org.openehealth.ipf.platform.camel.core.extend.DefaultModelExtender">
        <property name="routeModelExtensions">
            <list>
                <ref bean="coreModelExtension" />
                <ref bean="lbsModelExtension" />
            </list>
        </property>
    </bean>

	<!-- 
        Stores the binaries while processing the routes
     -->
    <bean id="largeBinaryStore" class="org.openehealth.ipf.commons.lbs.store.DiskStore">
        <constructor-arg value="target/tempstore"/>
    </bean>

    <!--
        Creates data sources used as resources in Camel messages
     -->
    <bean id="resourceFactory" class="org.openehealth.ipf.commons.lbs.resource.ResourceFactory">
        <constructor-arg ref="largeBinaryStore" />
        <constructor-arg value="unnamed" />
    </bean>

    <!-- Definition of a CXF endpoint via a service using a WSDL. -->
    <cxf:cxfEndpoint id="imageBinServer"
        serviceClass="org.openehealth.tutorial.imagebin.ImageBin"
        address="http://localhost:8413/ImageBin/ImageBinPort"
        endpointName="s:ImageBin" 
        serviceName="s:ImageBinService" 
        wsdlURL="wsdl/imagebin.wsdl"
        xmlns:s="http://tutorial.openehealth.org/imagebin/">

        <!-- Enabling MTOM is recommended with large binaries -->
        <cxf:properties>
            <entry key="mtom-enabled" value="true" />
        </cxf:properties>
    </cxf:cxfEndpoint>

    <util:list id="resourceHandlers">
        <bean class="org.openehealth.ipf.platform.camel.lbs.cxf.process.CxfPojoResourceHandler">
            <constructor-arg ref="resourceFactory" />
        </bean>
        <bean class="org.openehealth.ipf.platform.camel.lbs.http.process.HttpResourceHandler">
            <constructor-arg ref="resourceFactory" />
        </bean>
    </util:list>
    
</beans>
