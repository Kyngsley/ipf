<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2010 the original author or authors. Licensed under the Apache
    License, Version 2.0 (the "License"); you may not use this file except
    in compliance with the License. You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable
    law or agreed to in writing, software distributed under the License is
    distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the specific
    language governing permissions and limitations under the License.
-->

<!--
    Schematron rules for ITI-55 request message.
    @author Dmytro Rud 
-->

<sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron">
    <sch:ns uri="http://www.w3.org/2001/XMLSchema-instance" prefix="xsi" />
    <sch:ns uri="urn:hl7-org:v3" prefix="hl7" />
	
    <!-- ========================================================================== 
                                RULES FOR xsi:DATATYPE CHECKS 
         ========================================================================== -->
    <sch:pattern abstract="true" id="check-type">
        <sch:rule context="/hl7:PRPA_IN201305UV02/hl7:controlActProcess/hl7:queryByParameter/$element/hl7:value">
            <sch:assert test="not(.) or (@xsi:type = '$type')">
                sub-element 'value' is constrained to data type $type
            </sch:assert>
        </sch:rule>
    </sch:pattern>

    <sch:pattern is-a="check-type" id="x1">
        <sch:param name="element" value="hl7:matchCriterionList/hl7:matchAlgorithm" />
        <sch:param name="type" value="ST" />
    </sch:pattern>

    <sch:pattern is-a="check-type" id="x2">
        <sch:param name="element" value="hl7:matchCriterionList/hl7:minimumDegreeMatch" />
        <sch:param name="type" value="INT" />
    </sch:pattern>

    <!-- 
    <sch:pattern is-a="check-type">
        <sch:param name="element" value="hl7:parameterList/hl7:livingSubjectName" />
        <sch:param name="type" value="PN" />
    </sch:pattern>
    -->
    
    
    <!-- ========================================================================== 
                    RULES FOR CHECKS THAT count(SOMETHING) <= 1
         ========================================================================== -->
    <sch:pattern abstract="true" id="check-count-is-1">
        <sch:rule context="/hl7:PRPA_IN201305UV02/hl7:controlActProcess/hl7:queryByParameter/hl7:parameterList">
            <sch:assert test="count($element) &lt;= 1">
                only one sub-element '$element' is allowed here
            </sch:assert>
        </sch:rule>
    </sch:pattern>

    <sch:pattern is-a="check-count-is-1" id="x10">
        <sch:param name="element" value="hl7:livingSubjectAdministrativeGender" />
    </sch:pattern>
    <sch:pattern is-a="check-count-is-1" id="x11">
        <sch:param name="element" value="hl7:livingSubjectBirthPlaceAddress" />
    </sch:pattern>
    <sch:pattern is-a="check-count-is-1" id="x12">
        <sch:param name="element" value="hl7:livingSubjectBirthPlaceName" />
    </sch:pattern>
    <sch:pattern is-a="check-count-is-1" id="x13">
        <sch:param name="element" value="hl7:livingSubjectBirthTime" />
    </sch:pattern>
    <sch:pattern is-a="check-count-is-1" id="x14">
        <sch:param name="element" value="hl7:mothersMaidenName" />
    </sch:pattern>
    <sch:pattern is-a="check-count-is-1" id="x15">
        <sch:param name="element" value="hl7:patientAddress" />
    </sch:pattern>
    <sch:pattern is-a="check-count-is-1" id="x16">
        <sch:param name="element" value="hl7:patientTelecom" />
    </sch:pattern>
            

    <!-- ========================================================================== 
                    RULES FOR CHECKS THAT count(SOMETHING/hl7:value) <= 1
         ========================================================================== -->
    <sch:pattern abstract="true" id="check-value-count-is-1">
        <sch:rule context="/hl7:PRPA_IN201305UV02/hl7:controlActProcess/hl7:queryByParameter/hl7:parameterList/$element">
            <sch:assert test="count(hl7:value) &lt;= 1">
                only one 'value' sub-element is allowed here
            </sch:assert>
        </sch:rule>
    </sch:pattern>

    <sch:pattern is-a="check-value-count-is-1" id="x3">
        <sch:param name="element" value="hl7:livingSubjectAdministrativeGender" />
    </sch:pattern>
    <sch:pattern is-a="check-value-count-is-1" id="x4">
        <sch:param name="element" value="hl7:livingSubjectBirthTime" />
    </sch:pattern>
    <sch:pattern is-a="check-value-count-is-1" id="x5">
        <sch:param name="element" value="hl7:livingSubjectName" />
    </sch:pattern>
    <sch:pattern is-a="check-value-count-is-1" id="x6">
        <sch:param name="element" value="hl7:patientAddress" />
    </sch:pattern>
    <sch:pattern is-a="check-value-count-is-1" id="x7">
        <sch:param name="element" value="hl7:principalCareProviderId" />
    </sch:pattern>
    <sch:pattern is-a="check-value-count-is-1" id="x8">
        <sch:param name="element" value="hl7:mothersMaidenName" />
    </sch:pattern>
    <sch:pattern is-a="check-value-count-is-1" id="x9">
        <sch:param name="element" value="hl7:patientTelecom" />
    </sch:pattern>


    <!-- ========================================================================== 
                                 RULES FOR ALL OTHER CHECKS  
         ========================================================================== -->
    <sch:pattern id="qbp-constraints-section_3_55_4_1_2_2">
        <sch:rule context="/hl7:PRPA_IN201305UV02/hl7:controlActProcess/hl7:queryByParameter">
            <sch:assert test="not(hl7:matchCriterionList/hl7:id)">matchCriterionList.id must be omitted</sch:assert>
            <sch:assert test="not(hl7:responseElementGroupId)">responseElementGroupId must be omitted</sch:assert>
            <sch:assert test="not(hl7:modifyCode)">modifyCode must be omitted</sch:assert>
            <sch:assert test="not(hl7:executionAndDeliveryTime)">executionAndDeliveryTime must be omitted</sch:assert>
            <sch:assert test="not(hl7:sortControl)">sortControl must be omitted</sch:assert>
            <sch:assert test="not(hl7:matchCriterionList/hl7:matchWeight)">matchCriterionList.matchWeight must be omitted</sch:assert>
            <sch:assert test="not(hl7:initialQuantity)">initialQuantity must be omitted</sch:assert>
            <sch:assert test="not(hl7:initialQuantityCode)">initialQuantityCode must be omitted</sch:assert>

            <sch:assert test="hl7:responsePriorityCode/@code = 'I'">responsePriorityCode must equal to 'I'</sch:assert>
            <sch:assert test="hl7:responseModalityCode/@code = 'R'">responseModalityCode must equal to 'R'</sch:assert>
            <sch:assert test="hl7:statusCode/@code = 'new'">statusCode must equal to 'new'</sch:assert>
            
            <sch:assert test="count(hl7:responseModalityCode) = 1">exactly one sub-element 'responseModalityCode' must be present here</sch:assert>
            <sch:assert test="count(hl7:responsePriorityCode) = 1">exactly one sub-element 'responsePriorityCode' must be present here</sch:assert>
        </sch:rule>
            
        <sch:rule context="/hl7:PRPA_IN201305UV02/hl7:controlActProcess/hl7:queryByParameter/hl7:matchCriterionList/hl7:minimumDegreeMatch/hl7:value">
            <sch:assert test="not(@value) or ((number(@value) &gt;= 0) and (number(@value) &lt;= 100))">
                minimumDegreeMatch.value must be between 0 and 100
            </sch:assert>
        </sch:rule>

        <sch:rule context="/hl7:PRPA_IN201305UV02/hl7:controlActProcess/hl7:queryByParameter/hl7:parameterList">
            <!-- from Section 3.55.4.1.2.1, line #780 -->
            <sch:assert test="hl7:livingSubjectId/hl7:value/@root or (hl7:livingSubjectName and hl7:livingSubjectBirthTime)">
                when no patient ID @root is provided, both patient name and birth time must be specified   
            </sch:assert>
        
            <sch:assert test="not(hl7:id)">parameterList.id must be omitted</sch:assert>
            <sch:assert test="not(hl7:patientStatusCode)">patientStatusCode must be omitted</sch:assert>
            <sch:assert test="not(hl7:livingSubjectDeceaseTime)">livingSubjectDeceaseTime must be omitted</sch:assert>
            <sch:assert test="not(hl7:otherIDsScopingOrganization)">otherIDsScopingOrganization must be omitted</sch:assert>
        </sch:rule>

        <sch:rule context="/hl7:PRPA_IN201305UV02/hl7:controlActProcess/hl7:queryByParameter/hl7:parameterList/hl7:livingSubjectId/hl7:value">
            <sch:assert test="(@root and @extension and not(@nullFlavor)) or (@nullFlavor and (count(@*) = 1))">
                either both @root and @extension or @nullFlavor must be provided in a patient ID
            </sch:assert>
        </sch:rule>

        <sch:rule context="/hl7:PRPA_IN201305UV02/hl7:controlActProcess/hl7:queryByParameter/hl7:parameterList/hl7:principalCareProviderId">
            <sch:assert test="count(hl7:semanticsText) = 1">sub-element 'semanticsText' must be present here</sch:assert>
        </sch:rule>
        
        <!-- XCPD supplement, line 765; but must be mothersMaidenName, not livingSubjectName -->
        <sch:rule context="/hl7:PRPA_IN201305UV02/hl7:controlActProcess/hl7:queryByParameter/hl7:parameterList/hl7:mothersMaidenName/hl7:value">
            <sch:assert test="not(@use = 'SRCH')">attribute 'use' should not be set to 'SRCH'</sch:assert>
        </sch:rule>
    </sch:pattern>


    <!-- ========================================================================== 
                                      ADDITIONAL RULES  
         ========================================================================== -->
	<sch:pattern id="message-id">
	    <!-- 
        HL7v3 spec 2009, Section 2.17.1:
        "The root alone may be the entire instance identifier."

		<sch:rule context="/hl7:PRPA_IN201305UV02/hl7:id">
			<sch:assert test="@root and @extension">attributes 'root' and 'extension' must be present</sch:assert>
		</sch:rule>
		-->
		
		<!--
		XCPD Supplement August 2009, Section 3.55.4.1.2.4, line 885:
		"The IG should be capable of specifying..."
		
		As "should be capable of X" is not equal to "should do X", 
		we disable the check below. 
		 
		<sch:rule context="/hl7:PRPA_IN201305UV02/hl7:controlActProcess">
			<sch:assert test="count(hl7:authorOrPerformer) = 1">
				exactly one 'authorOrPerformer' sub-element must be present here
			</sch:assert>
		</sch:rule>
		-->
	</sch:pattern>

	<sch:pattern abstract="true" id="id-root-exactly-one">
		<sch:rule context="/hl7:PRPA_IN201305UV02/$element">
			<sch:assert test="count(hl7:id) = 1">
				exactly one 'id' sub-element must be present here
            </sch:assert>
			<sch:assert test="hl7:id/@root">
				$name must be specified in the attribute '@root' of the sub-element 'id'
			</sch:assert>
			<sch:assert test="not(hl7:id/@nullFlavor or hl7:id/@extension or hl7:id/@assigningAuthorityName)">
				only attribute 'root' is allowed in the sub-element 'id'
            </sch:assert>
		</sch:rule>
	</sch:pattern>

	<!-- see lines #855-860 in XCPD supplement -->
	<sch:pattern is-a="id-root-exactly-one" id="check-home-community-id">
		<sch:param name="element" value="hl7:sender/hl7:device/hl7:asAgent/hl7:representedOrganization" />
		<sch:param name="name" value="homeCommunityId" />
	</sch:pattern>

	<!-- see line #882 and below in XCPD supplement -->
	<sch:pattern is-a="id-root-exactly-one" id="check-community-assigning-authority">
		<sch:param name="element" value="hl7:controlActProcess/hl7:authorOrPerformer/hl7:assignedDevice" />
		<sch:param name="name" value="community patient ID assigning authority" />
	</sch:pattern>

</sch:schema>
